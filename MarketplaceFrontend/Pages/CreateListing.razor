@page "/createlisting"
@inject HttpClient Http
@inject AuthService AuthService
@layout MainLayout

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">Create New Listing</h4>
                </div>
                <div class="card-body">

                    @if (!string.IsNullOrEmpty(message))
                    {
                        <div class="alert @(message.Contains("successfully") ? "alert-success" : "alert-danger")" role="alert">
                            @message
                        </div>
                    }

                    <EditForm Model="newListing" OnValidSubmit="HandleSubmit">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <div class="mb-3">
                            <label class="form-label">Title</label>
                            <InputText class="form-control" @bind-Value="newListing.Title" placeholder="Enter title" />
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Description</label>
                            <InputTextArea class="form-control" @bind-Value="newListing.Description" placeholder="Enter description" rows="4" />
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Price</label>
                            <InputNumber class="form-control" @bind-Value="newListing.Price" placeholder="Enter price" />
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Category</label>
                            <InputText class="form-control" @bind-Value="newListing.Category" placeholder="Enter category" />
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Image URL</label>
                            <InputText class="form-control" @bind-Value="newListing.ImageUrl" placeholder="Enter image URL" />
                        </div>

                        <button class="btn btn-primary w-100" type="submit">Create Listing</button>
                    </EditForm>

                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private ListingCreateDto newListing = new();
    private string message = "";

    protected override async Task OnInitializedAsync()
    {
        var token = await AuthService.GetToken();
        if (token == null)
        {
            message = "You must be logged in to create a listing.";
            return;
        }

        var handler = new System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler();
        var jwtToken = handler.ReadJwtToken(token);
        var userIdClaim = jwtToken.Claims.FirstOrDefault(c => c.Type == "sub" || c.Type == "userId");
        if (userIdClaim != null && Guid.TryParse(userIdClaim.Value, out var userId))
        {
            newListing.UserId = userId;
        }
        else
        {
            message = "Could not determine user ID from token.";
        }
    }

    private async Task HandleSubmit()
    {
        var token = await AuthService.GetToken();
        if (token == null) return;

        Http.DefaultRequestHeaders.Authorization =
            new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", token);

        var response = await Http.PostAsJsonAsync("api/listings", newListing);
        if (response.IsSuccessStatusCode)
        {
            message = "Listing created successfully!";
            newListing = new(); // clear form
        }
        else
        {
            message = "Error creating listing.";
        }
    }
}
